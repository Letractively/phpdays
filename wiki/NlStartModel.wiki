#summary samenvatting blog applicatie modellen (snel start).
#sidebar EnStart
<wiki:comment>revision: 1</wiki:comment>

Alle modellen die gebruikt worden, worden verwerkt in onze blog applicatie. We kunnen gebruik maken van standaard basis phpDays 'modellen, we kunnen ze uitbreiden naar uw wensen en het beste wat bij u past. En dat is wat wij doen.

Als u nog niets gelezen heeft over de de modellen? dan is het tijd om dat te doen. Hieronder wij maken modellen [EnLibDaysModel models] voor onze toepassing.

=== Het creÃ«ren van modellen voor de blog toepassing ===

In the directory `app/Model` create the following files:
 * `Blog.php` - represents a specific blog. There can be several blogs and each of them has its own subject.
{{{
<?php
class Model_Blog extends Days_Model {
    protected $_name = 'type: String, min: 2, max: 100, required';
    protected $_url = 'type: String, min: 2, max: 100, required';
    protected $_owner = 'type: User, required';
    protected $_created = 'type: DateTime, now: create, required';
    protected $_changed = 'type: DateTime, now: always, required';
}
}}}
 * `BlogPost.php` - represents an article in the blog. Comments can be added to an article.
{{{
<?php
class Model_BlogPost extends Days_Model {
    protected $_name = 'type: String, min: 2, max: 100, required';
    protected $_url = 'type: String, min: 2, max: 100, required, unique';
    protected $_title = 'type: String, max: 255, required';
    protected $_content = 'type: Text, min: 100, required';
    protected $_blog = 'type: Blog, required';
    protected $_category = 'type: BlogCategory';
    protected $_tags = 'type: + BlogTag';
    protected $_author = 'type: User, required';
    protected $_created = 'type: DateTime, now: create, required';
    protected $_media = 'type: + String';
}
}}}
 * `BlogCategory.php` - is a message category _(music, news, misc, etc.)_
{{{
<?php
class Model_BlogCategory extends Days_Model {
    protected $_name = 'type: String, min: 2, max: 50, required';
    protected $_url = 'type: String, min: 2, max: 50, required';
}
}}}
 * ` BlogTag.php `- tags used to mark an article
{{{
<?php
class Model_BlogTag extends Days_Model {
    protected $_name = 'type: String, min: 2, max: 70, required, unique';
    protected $_url = 'type: String, min: 2, max: 70, required, unique';
}
}}}
 * `BlogComment` - comments on an article. We'll extend the standard Comment model.
{{{
<?php
class Model_BlogComment extends Days_Model_Comment {
    protected $_title = 'type: String, required';
    protected $_author = 'type: User, required';
    protected $_post = 'type: BlogPost, required';
    protected $_created = 'type: DateTime, now: create';
}
}}}
 * `User.php` - a site's user. We'll extend the standard User model.
{{{
<?php
class Model_User extends Days_Model_User {
    protected $_firstname = 'type: String, min: 2, max: 50';
    protected $_lastname = 'type: String, min: 2, max: 50';
    protected $_birthdate = 'type: DateTime, min: 1950-1-1, required';
}
}}}

=== What we've created ===

We have created a class for models that represent objects of a data storage. The data is stored in a repository and later we can retrieve it and pass it to a user. This way we do not work directly with a data storage but with objects that are automatically converted to a data in the repository.

Notice that we did not declare any specialized data, such as key fields of objects. Key fields are created automatically.

Now it's time to move on to creating [EnStartController application's controllers].